---
import { getCollection, type CollectionEntry } from 'astro:content';
import type { GetStaticPaths } from 'astro';
import Base from '../../layouts/Base.astro';
import { portfolioConfig } from '../../config/portfolio.config';

export const getStaticPaths: GetStaticPaths = async () => {
  const posts = await getCollection('posts');
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post }
  }));
};

interface Props {
  post: CollectionEntry<'posts'>;
}

const { post } = Astro.props as Props;
const { Content } = await post.render();

// Get all posts for navigation
const allPosts = (await getCollection('posts')).sort(
  (a, b) => b.data.publishedAt.valueOf() - a.data.publishedAt.valueOf()
);

const currentIndex = allPosts.findIndex(p => p.slug === post.slug);
const previousPost = currentIndex < allPosts.length - 1 ? allPosts[currentIndex + 1] : null;
const nextPost = currentIndex > 0 ? allPosts[currentIndex - 1] : null;
---

<Base title={`${post.data.title} - ${portfolioConfig.seo.title}`}>
  <div class="min-h-screen bg-background">
    <!-- Header -->
    <header class="border-b border-border bg-background">
      <div class="max-w-4xl mx-auto px-6 py-8">
        <nav class="mb-8">
          <a href="/blog" class="text-sm text-muted">
            ‚Üê Back to blog
          </a>
        </nav>
        
        <div class="space-y-4">
          <div class="flex items-baseline gap-4">
            <span class="text-xs text-muted text-tabular">
              {String(currentIndex + 1).padStart(2, '0')}
            </span>
            <div class="text-xs text-muted text-tabular">
              {post.data.publishedAt.toLocaleDateString('en-US', {
                year: 'numeric',
                month: 'long',
                day: 'numeric'
              })}
            </div>
          </div>
          
          <h1 class="text-4xl text-foreground leading-tight">
            {post.data.title}
          </h1>
          
          <p class="text-lg text-muted leading-relaxed max-w-2xl">
            {post.data.description}
          </p>
          
          {post.data.tags.length > 0 && (
            <div class="flex flex-wrap gap-2 pt-2">
              {post.data.tags.map((tag) => (
                <span class="px-3 py-1 border border-border text-xs text-muted">
                  {tag}
                </span>
              ))}
            </div>
          )}
        </div>
      </div>
    </header>

    <!-- Content -->
    <main class="max-w-7xl mx-auto px-6 py-16">
      <div class="grid grid-cols-1 lg:grid-cols-[1fr_2fr] gap-12 items-start">
        <!-- Left Column: Image -->
        <div class="lg:sticky lg:top-30">
          <div class="aspect-[9/16] bg-border border border-border overflow-hidden">
            {post.data.image ? (
              <img 
                src={post.data.image} 
                alt={post.data.title}
                class="w-full h-full object-cover"
              />
            ) : (
              <div class="w-full h-full flex items-center justify-center">
                <span class="text-muted text-sm">No image</span>
              </div>
            )}
          </div>
        </div>
        
        <!-- Right Column: Post Content -->
        <article class="prose prose-lg max-w-none">
          <div class="text-foreground leading-relaxed blog-content">
            <Content />
          </div>
        </article>
      </div>
      
      <!-- Navigation -->
      <nav class="mt-16 pt-8 border-t border-border">
        <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
          {previousPost && (
            <div>
              <p class="text-xs text-muted mb-2">Previous Post</p>
              <a 
                href={`/blog/${previousPost.slug}`}
                class="block p-4 border border-border"
              >
                <h3 class="text-sm text-foreground leading-tight">
                  {previousPost.data.title}
                </h3>
                <p class="text-xs text-muted mt-2 leading-relaxed">
                  {previousPost.data.description}
                </p>
              </a>
            </div>
          )}
          
          {nextPost && (
            <div class="md:text-right">
              <p class="text-xs text-muted mb-2 md:text-right">Next Post</p>
              <a 
                href={`/blog/${nextPost.slug}`}
                class="block p-4 border border-border"
              >
                <h3 class="text-sm text-foreground leading-tight">
                  {nextPost.data.title}
                </h3>
                <p class="text-xs text-muted mt-2 leading-relaxed">
                  {nextPost.data.description}
                </p>
              </a>
            </div>
          )}
        </div>
        
        <div class="mt-8 text-center">
          <a 
            href="/blog"
            class="inline-flex items-center gap-2 text-sm text-muted"
          >
            View all posts
          </a>
        </div>
      </nav>
    </main>
  </div>
</Base>